[
{
	"uri": "//localhost:1313/",
	"title": "Session Management",
	"tags": [],
	"description": "",
	"content": "Threat Detection \u0026amp; Response Workshop Overall This workshop is designed to give you an introduction and then take you deeper into AWS threat detection and response services use cases, best practices, and specific scenarios. This workshop starts with an introduction to services and then focuses on advanced topics of threat detection and response with modules focusing on multi-service solutions, integrations, custom orchestration examples, and examples of responding to specific detections. All of this is designed to prepare you and help you operate more securely on AWS.\nContent Introduction Introduction to threat detection and response services Connect to EC2 instance Manage session logs Port Forwarding Clean up resources "
},
{
	"uri": "//localhost:1313/2-introduction-to-threat-detection-and-response-services/2.1-aws-security-hub/",
	"title": "AWS Security Hub",
	"tags": [],
	"description": "",
	"content": "Content Security Hub - Overview Security Hub - Dashboard Security Hub Findings Security Hub - Pricing Security Hub - Notifications "
},
{
	"uri": "//localhost:1313/3-accessibilitytoinstances/3.1-public-instance/",
	"title": "Connect to Public Instance",
	"tags": [],
	"description": "",
	"content": "\nGo to EC2 service management console. Click on Public Linux Instance. Click Actions. Click Security. Click Modify IAM role. At the Modify IAM role page. Click to select SSM-Role. Click Save. You will need to wait about 10 minutes before performing the next step. This time our EC2 instance will automatically register with the Session Manager.\nGo to the AWS Systems Manager service management console Drag the left menu slider down. Click Session Manager. Click Start Session. Then select Public Linux Instance and click Start session to access the instance. Terminal will appear on the browser. Testing with the command sudo tcpdump -nn port 22 and sudo tcpdump we will see no SSH traffic but only HTTPS traffic. Above, we have created a connection to the public instance without opening SSH port 22, for better security, avoiding any attack to the SSH port.\nOne disadvantage of the above method is that we have to open the Security Group outbound at port 443 to the internet. Since it\u0026rsquo;s a public instance, it probably won\u0026rsquo;t be a problem, but if you want extra security, you can block port 443 to the internet and still use the Session Manager. We will go through this in the private instance section below.\nYou can click terminate to end the currently connected session before proceeding to the next step.\n"
},
{
	"uri": "//localhost:1313/3-accessibilitytoinstances/3.2-private-instance/3.2.2-createvpcendpoint/3.2.2.1-endpointssm/",
	"title": "Create Endpoint ssm",
	"tags": [],
	"description": "",
	"content": "Create VPC Endpoint SSM Go to VPC service management console Click Endpoints. Click Create endpoint. At the Create endpoint page. In the Name tag field, enter SSM. In the Service Category section, select AWS Services. In the Service Name section, In the Service category section, select: AWS services In the Service Name section enter: SSM then select Service Name: com.amazonaws.ap-southeast-1.ssm. In the Service Name column, click com.amazonaws.ap-southeast-1.ssm. In the VPC section, select Lab VPC. Select the first AZ, then select the Lab Private Subnet subnet. Scroll down. In the Security Group section, select the Security group SG VPC Endpoint that we created earlier. In the Policy section, select Full access. Scroll down. Click Create endpoint. We have created the VPC Interface Endpoint for SSM. "
},
{
	"uri": "//localhost:1313/3-accessibilitytoinstances/3.2-private-instance/3.2.1-enablevpcdns/",
	"title": "Enable DNS hostnames",
	"tags": [],
	"description": "",
	"content": "Enable DNS hostnames on VPC. To create VPC Endpoint we will need to enable DNS hostnames feature on VPC. Go to VPC service management console\nClick Your VPCs.\nSelect Lab VPC.\nClick Actions.\nClick Edit DNS hostnames.\nClick Endpoint, then click Create Endpoint.\nAt the Edit DNS hostnames page. Click to select Enable. Click Save changes. "
},
{
	"uri": "//localhost:1313/2-introduction-to-threat-detection-and-response-services/2.1-aws-security-hub/2.1.1-security-hub-overview/",
	"title": "Security Hub - Overview",
	"tags": [],
	"description": "",
	"content": "Security Standards Navigate to the Summary page in Security Hub. AWS Security Hub summary page From the Summary page, you can see what standards have been enabled in your account, and you can see the number of passed and failed controls per standard. The percentage is the percent of controls in a \u0026ldquo;passed\u0026rdquo; compliance status compared to the number of controls that have a \u0026ldquo;passed\u0026rdquo; or \u0026ldquo;failed\u0026rdquo; compliance status. Click on Security standards from the navigation on the left. Standards were enabled using CloudFormation when the workshop was provisioned. Let\u0026rsquo;s dive into one of the standards. Click View Results for NIST Special Publication 800-53 Revision 5. Controls From the top of the page, you can select tabs to show only \u0026ldquo;Passed\u0026rdquo;, \u0026ldquo;Failed\u0026rdquo;, \u0026ldquo;Disabled\u0026rdquo;, etc. controls. You can also filter to a control using the search bar that says \u0026ldquo;Filter all enabled controls\u0026rdquo;. Click the search bar and filter on ID. Specify ID = EC2.13. Click on the Title: Security groups should not allow ingress from 0.0.0.0/0 to port 22. This presents a view of all resources evaluated for this particular control and the current status of each resource as it relates to the control. Notice there are some resources with a FAILED status and some with a PASSED status. AWS Security Hub Security Standards provide remediation instructions for each check. At the top of the page click the Remediation instructions link to open guidance in a new tab. Investigating a misconfigured resource Return to the Security Hub control you were looking at. For one of the FAILED resources open Config rule in the Investigate column. This will display links that will take you to AWS Config to view the configuration timeline for this resource or the overall config rule that performed the evaluation on this resource. Click Configuration timeline. This opens AWS Config, and shows the resource configuration timeline for this security group. From here, you can investigate the point in time when the resource became non-compliant by reviewing the timestamped events. If you want, take a minute to expand a couple of the events. Expand a CloudTrail Event listed. Then click CloudTrail under View event. This opens up that event, logged in CloudTrail. AWS CloudTrail monitors and records account activity across your AWS infrastructure, giving you control over storage, analysis, and remediation actions. Consolidated controls Return to Security Hub and open General settings page from the navigation panel. https://console.aws.amazon.com/securityhub/home?#/settings/general At the top of the page, you should see that both \u0026ldquo;Auto-enable new controls in enabled standards\u0026rdquo; and \u0026ldquo;Consolidated control findings\u0026rdquo; is enabled.\nClick Controls from the navigation panel. This page shows a similar view to what you reviewed at the standard level, but here you see the full list of consolidated controls. This makes it easier to see how many individual controls in your account are passing, failing, or in some other state. Additionally, with consolidated findings enabled, controls included in multiple enabled standards no longer generate a finding per standard (duplicates). This helps manage the number of findings in your environment and removes potential confusion around duplicate findings.\nInsights In the navigation on the left, click Insights. In the search bar, input \u0026ldquo;severity\u0026rdquo; and select the insight named 24. Severity by counts of findings. Security Hub offers several built-in managed insights. You cannot modify or delete managed insights. 24. Severity by counts of findings is one of the managed insights. Take a minute to review the number of findings in the environment. Select a Severity Label (e.g. Critical) to see the underlying finding(s). "
},
{
	"uri": "//localhost:1313/4-s3log/4.1-updateiamrole/",
	"title": "Update IAM Role",
	"tags": [],
	"description": "",
	"content": "For our EC2 instances to be able to send session logs to the S3 bucket, we will need to update the IAM Role assigned to the EC2 instance by adding a policy that allows access to S3.\nUpdate IAM Role Go to IAM service management console Click Roles. In the search box, enter SSM. Click on the SSM-Role role. Click Attach policies. In the Search box enter S3. Click the policy AmazonS3FullAccess. Click Attach policy. In the production environment, we will grant stricter permissions to the specified S3 bucket. In the framework of this lab, we use the policy AmazonS3FullAccess for convenience.\nNext, we will proceed to create an S3 bucket to store session logs.\n"
},
{
	"uri": "//localhost:1313/1-workshop-instructions/",
	"title": "Workshop Instructions",
	"tags": [],
	"description": "",
	"content": "Available labs Security Hub Security Hub - Overview Security Hub - Overview Security Hub - Dashboard Security Hub - Findings Security Hub - Pricing Security Hub - Notifications Amazon GuardDuty GuardDuty - Overview GuardDuty - Findings GuardDuty - Protection plans GuardDuty - Building your own threat list GuardDuty - Suppressing findings GuardDuty - Pricing GuardDuty - Simple notifications GuardDuty - Retaining findings Amazon Inspector Inspector - Overview Inspector - Dashboard Inspector - Findings Inspector - Vulnerability database search Inspector - Suppressing findings Inspector - Pricing Amazon Detective Detective - Overview Detective - Summary Detective - Search Detective - Investigations Detective - Finding Groups Detective - Pricing Detective - EKS Audit Logs "
},
{
	"uri": "//localhost:1313/3-accessibilitytoinstances/3.2-private-instance/",
	"title": "Connect to Private instance",
	"tags": [],
	"description": "",
	"content": "For Windows instance located in private subnet, there is no public IP, no internet gateway so it cannot go out internet.\nWith this type of instance, the traditional way is to use Bastion host technique which is expensive and laborious, but here we will use Session Manager with this type.\nBasically, the private instance still has to open the TCP 443 port to System Manager, but we don\u0026rsquo;t want to allow connection go out to the internet, but only in its VPC, to enhance our security posture.\nTo do that, we have to include the System Manager endpoint in the VPC, that is, using the VPC interface endpoint:\nVPC interface endpoint is attached to the subnet, so this method can be done not only with private subnet but also with public subnet, meaning that with public subnet, you can completely prohibit TCP 443 go out to the internet.\nContent: Enable DNS hostnames Create VPC Endpoint Connect Private Instance "
},
{
	"uri": "//localhost:1313/3-accessibilitytoinstances/3.2-private-instance/3.2.2-createvpcendpoint/3.2.2.2-endpointssmmessages/",
	"title": "Create Endpoint ssmmessages",
	"tags": [],
	"description": "",
	"content": "Create VPC Endpoint SSMMESSAGES Go to VPC service management console Click Endpoints. Click Create endpoint. At the Create endpoint page. In the Name tag field, enter SSMMESSAGES. In the Service Category section, select AWS Services. In the Service Name section, In the Service category select: AWS services In the Service Name field enter: ssmmessages then select Service Name: com.amazonaws.ap-southeast-1.ssmmessages. In the Service Name column, click com.amazonaws.ap-southeast-1.ssmmessages. In the VPC section, select Lab VPC. Select the first AZ, then select the Lab Private Subnet subnet. Scroll down. In the Security Group section, select the Security group SG VPC Endpoint that we created earlier. In the Policy section, select Full access Scroll down. Click Create endpoint. We have created the VPC Interface Endpoint SSMMESSAGES. "
},
{
	"uri": "//localhost:1313/2-introduction-to-threat-detection-and-response-services/2.2-amazon-guardduty/",
	"title": "Create IAM Role",
	"tags": [],
	"description": "",
	"content": "Create IAM Role In this step, we will proceed to create IAM Role. In this IAM Role, the policy AmazonSSMManagedInstanceCore will be assigned, this is the policy that allows the EC2 server to communicate with the Session Manager.\nGo to IAM service administration interface In the left navigation bar, click Roles. Click Create role. Click AWS service and click EC2. Click Next: Permissions. In the Search box, enter AmazonSSMManagedInstanceCore and press Enter to search for this policy. Click the policy AmazonSSMManagedInstanceCore. Click Next: Tags. Click Next: Review. Name the Role SSM-Role in Role Name Click Create Role . Next, we will make the connection to the EC2 servers we created with Session Manager.\n"
},
{
	"uri": "//localhost:1313/2-introduction-to-threat-detection-and-response-services/2.3-amazon-inspector/",
	"title": "Create IAM Role",
	"tags": [],
	"description": "",
	"content": "Create IAM Role In this step, we will proceed to create IAM Role. In this IAM Role, the policy AmazonSSMManagedInstanceCore will be assigned, this is the policy that allows the EC2 server to communicate with the Session Manager.\nGo to IAM service administration interface In the left navigation bar, click Roles. Click Create role. Click AWS service and click EC2. Click Next: Permissions. In the Search box, enter AmazonSSMManagedInstanceCore and press Enter to search for this policy. Click the policy AmazonSSMManagedInstanceCore. Click Next: Tags. Click Next: Review. Name the Role SSM-Role in Role Name Click Create Role . Next, we will make the connection to the EC2 servers we created with Session Manager.\n"
},
{
	"uri": "//localhost:1313/2-introduction-to-threat-detection-and-response-services/2.4-amazon-detective/",
	"title": "Create IAM Role",
	"tags": [],
	"description": "",
	"content": "Create IAM Role In this step, we will proceed to create IAM Role. In this IAM Role, the policy AmazonSSMManagedInstanceCore will be assigned, this is the policy that allows the EC2 server to communicate with the Session Manager.\nGo to IAM service administration interface In the left navigation bar, click Roles. Click Create role. Click AWS service and click EC2. Click Next: Permissions. In the Search box, enter AmazonSSMManagedInstanceCore and press Enter to search for this policy. Click the policy AmazonSSMManagedInstanceCore. Click Next: Tags. Click Next: Review. Name the Role SSM-Role in Role Name Click Create Role . Next, we will make the connection to the EC2 servers we created with Session Manager.\n"
},
{
	"uri": "//localhost:1313/4-s3log/4.2-creates3bucket/",
	"title": "Create S3 Bucket",
	"tags": [],
	"description": "",
	"content": "In this step, we will create an S3 bucket to store session logs sent from EC2 instances.\nCreate S3 Bucket Access S3 service management console Click Create bucket. At the Create bucket page. In the Bucket name field, enter the bucket name lab-yourname-bucket-0001 In the Region section, select Region you are doing the current lab. The name of the S3 bucket must not be the same as all other S3 buckets in the system. You can substitute your name and enter a random number when generating the S3 bucket name.\nScroll down and click Create bucket. When we created the S3 bucket we did Block all public access so our EC2 instances won\u0026rsquo;t be able to connect to S3 via the internet. In the next step, we will configure the S3 Gateway Endpoint feature to allow EC2 instances to connect to the S3 bucket via the VPC\u0026rsquo;s internal network.\n"
},
{
	"uri": "//localhost:1313/3-accessibilitytoinstances/3.2-private-instance/3.2.2-createvpcendpoint/",
	"title": "Create VPC Endpoint",
	"tags": [],
	"description": "",
	"content": "Create VPC Endpoint SSM We will create 3 interface endpoints required by the Session Manager:\nInterface endpoints: com.amazonaws.region.ssm com.amazonaws.region.ec2messages com.amazonaws.region.ssmmessages You can refer to more here\nContent: Create Endpoint ssm Create Endpoint ssmmessages Create Endpoint ec2messages "
},
{
	"uri": "//localhost:1313/2-introduction-to-threat-detection-and-response-services/",
	"title": "Introduction to threat detection and response services ",
	"tags": [],
	"description": "",
	"content": "Content AWS Security Hub Amazon GuardDuty Amazon Inspector Amazon Detective "
},
{
	"uri": "//localhost:1313/2-introduction-to-threat-detection-and-response-services/2.1-aws-security-hub/2.1.2-security-hub-dashboard/",
	"title": "Security Hub - Dashboard",
	"tags": [],
	"description": "",
	"content": "Security Hub summary Navigate to the Summary page in Security Hub. AWS Security Hub summary page At the top of the page, review the Security standards widget. This displays your most recent summary security score and the security score for each Security Hub standard. Security scores, which range from 0–100 percent, represent the proportion of passed controls relative to all of your enabled controls. Take a few minutes to review the insights generated on the Summary page. Can you see which resources in your account are failing the most security checks? One of the widgets provides a summary of the resources that have generated the most findings, broken down by the resource types. Scroll down to the graphs under Most common threat type and Software vulnerabilities with exploits. Review the threats and vulnerabilities aggregated in your account. Watch details about findings from AWS GuardDuty. Select one of them for more detail: "
},
{
	"uri": "//localhost:1313/3-accessibilitytoinstances/",
	"title": "Connect to EC2 servers",
	"tags": [],
	"description": "",
	"content": "In this step, we will connect to our EC2 servers, located in both the public and private subnets.\nContent 3.1. Connect to EC2 Public Server 3.2. Cconnect to EC2 Private Server\n"
},
{
	"uri": "//localhost:1313/3-accessibilitytoinstances/3.2-private-instance/3.2.3-connectec2/",
	"title": "Connect to instance",
	"tags": [],
	"description": "",
	"content": "Assign IAM role and restart EC2 instance. Go to EC2 service management console Click Private Windows Instance. Click Actions. Click Security. Click Modify IAM Role. At the Modify IAM Role page. In the IAM role section, select SSM-Role. Click Save. Click Private Windows Instance. Click Instance state. Click Reboot instance to restart, then click Reboot to confirm. Please wait 5 minutes before doing the next step.\nConnect to the private EC2 instance. Go to System Manager - Session Manager service management console Click Start session. Click Private Windows Instance. Click Start session. Type ipconfig command to check the IP address information of Private Windows Instance as shown below. "
},
{
	"uri": "//localhost:1313/3-accessibilitytoinstances/3.2-private-instance/3.2.2-createvpcendpoint/3.2.2.3-endpointec2messages/",
	"title": "Create Endpoint ec2messages",
	"tags": [],
	"description": "",
	"content": "Create VPC Endpoint EC2MESSAGES Go to VPC service management console Click Endpoints. Click Create endpoint. At the Create endpoint page. In the Name tag field, enter SSMMESSAGES. In the Service Category section, select AWS Services. In the Service Name section, In the Service category select: AWS services In the field Service Name enter: ec2 then select Service Name: com.amazonaws.ap-southeast-1.ec2messages. In the Service Name column, click com.amazonaws.ap-southeast-1.ec2messages. In the VPC section, select Lab VPC. Select the first AZ, then select the Lab Private Subnet subnet. Scroll down. In the Security Group section, select the Security group SG VPC Endpoint that we created earlier. In the Policy section, select Full access Scroll down. Click Create endpoint. We have created the VPC Interface Endpoint EC2MESSAGES.\nMake sure the 3 required endpoints have been created as shown below.\n"
},
{
	"uri": "//localhost:1313/4-s3log/4.3-creategwes3/",
	"title": "Create S3 Gateway endpoint",
	"tags": [],
	"description": "",
	"content": " Go to VPC service management console Click Endpoints. Click Create endpoint. At the Create endpoint page. In the Name tag field, enter S3GW. In the Service Category section, click AWS services. In the search box enter S3, then select com.amazonaws.[region].s3 In the Services section, select com.amazonaws.[region].s3 with the Type of Gateway. In the VPC section, select Lab VPC. In the Route tables section, select both route tables. Scroll down, click Create endpoint. The next step is to configure Session Manager to store session logs to the S3 bucket we created.\n"
},
{
	"uri": "//localhost:1313/2-introduction-to-threat-detection-and-response-services/2.1-aws-security-hub/2.1.3-security-hub-findings/",
	"title": "Security Hub - Findings",
	"tags": [],
	"description": "",
	"content": "Findings in Security Hub Click on Findings from the navigation on the left in Security Hub. You can use filters to narrow the list of findings displayed. Click the input Add filter. Select Product name and then input \u0026ldquo;GuardDuty\u0026rdquo; (case-sensitive). Click Apply. This will display all the findings that Security Hub has received from the threat detection service, GuardDuty. There are many Security Hub findings listed here. Try adding a filter to narrow the list down to high severity findings. Click the Add filters again. From the dropdown, select Severity label and choose is and then input HIGH. This is case-sensitive. Click Apply. Pick one of the findings and click on the title. This opens the finding details pane. Expand all the sections and take a few minutes to review the information here. You can see the description, a link to remediation instructions, information about the resource, and more. In the finding details pane click the finding ID link at the top of the pane to display the complete JSON for the finding. The finding JSON can be downloaded to a file if ever needed for further investigation. Close out of the JSON pop-up by clicking the X in the top right. At the top of the finding details, open the History tab to view a chronological list of all changes that have been made to the finding. The transparency of finding history helps you identify potential security risks more quickly and take proactive steps to mitigate them. Close the finding details pane by clicking the X in the top right, but stay on the Findings page.\nTry to understand what resources in our environment are generating the most findings. Remove all the filters. Then add a new filter, select Resource type and choose is not and then input AwsAccount. Click Apply. Add another filter. Select Record state, choose is, and then input ACTIVE. Click Apply. Click Add filters in the search bar again. This time, select Group by and choose ResourceId. Click Apply. This list shows you the number of findings per resource. View detail by clicking Insight details: "
},
{
	"uri": "//localhost:1313/4-s3log/",
	"title": "Manage session logs",
	"tags": [],
	"description": "",
	"content": "With Session Manager, we can view the history of connections to instances through Session history. However, we have not seen the details of the commands used in a session.\nIn this section, we will proceed to create an S3 bucket and configure the session logs feature to see the details of the commands used in the session.\nContent: Update IAM Role Create S3 Bucket Create S3 Gateway endpoint Configure Session logs "
},
{
	"uri": "//localhost:1313/4-s3log/4.4-configsessionlogs/",
	"title": "Monitor session logs",
	"tags": [],
	"description": "",
	"content": "Monitor session logs Access System Manager - Session Manager service management console Click the Preferences tab. Click Edit. Scroll down, at S3 logging, click Enable. Uncheck Allow only encrypted S3 buckets. Click Choose a bucket name from the list. Select the S3 bucket you created. Scroll down, click Save to save the configuration.\nAccess System Manager - Session Manager service management console\nClick Start session. Click Private Windows Instance. Click Start session. Type the command ipconfig. Type the command hostname. Click Terminate to exit the session, click Terminate again to confirm. Check Session logs in S3 Go to S3 service management console Click on the name of the S3 bucket we created for the lab. Click on the object name sessions log On the objects detail page, click Open. Object logs will be opened in a new tab in the browser. You can view the stored commands in session logs. "
},
{
	"uri": "//localhost:1313/2-introduction-to-threat-detection-and-response-services/2.1-aws-security-hub/2.1.4-security-hub-pricing/",
	"title": "Security Hub - Pricing",
	"tags": [],
	"description": "",
	"content": "Security Hub - Pricing During the free trial, you will get an estimate of your monthly bill if you were to continue to use Security Hub across the same accounts and Regions.\nFrom Security Hub, open the Usage page from the navigation on the left under Settings. Review your current trial usage and pricing dimensions.\n"
},
{
	"uri": "//localhost:1313/5-portfwd/",
	"title": "Port Forwarding",
	"tags": [],
	"description": "",
	"content": "\rPort Forwarding is a useful way to redirect network traffic from one IP address - Port to another IP address - Port. With Port Forwarding we can access an EC2 instance located in the private subnet from our workstation.\nWe will configure Port Forwarding for the RDP connection between our machine and Private Windows Instance located in the private subnet we created for this exercise.\nCreate IAM user with permission to connect SSM Go to IAM service management console Click Users , then click Add users. At the Add user page. In the User name field, enter Portfwd. Click on Access key - Programmatic access. Click Next: Permissions. Click Attach existing policies directly.\nIn the search box, enter ssm. Click on AmazonSSMFullAccess. Click Next: Tags, click Next: Reviews. Click Create user. Save Access key ID and Secret access key information to perform AWS CLI configuration.\nInstall and Configure AWS CLI and Session Manager Plugin To perform this hands-on, make sure your workstation has AWS CLI and Session Manager Plugin installed -manager-working-with-install-plugin.html)\nMore hands-on tutorials on installing and configuring the AWS CLI can be found here.\nWith Windows, when extracting the Session Manager Plugin installation folder, run the install.bat file with Administrator permission to perform the installation.\nImplement Portforwarding Run the command below in Command Prompt on your machine to configure Port Forwarding. aws ssm start-session --target (your ID windows instance) --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region (your region) Windows Private Instance Instance ID information can be found when you view the EC2 Windows Private Instance server details.\nExample command: C:\\Windows\\system32\u0026gt;aws ssm start-session --target i-06343d7377486760c --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region ap-southeast-1 If your command gives an error like below: SessionManagerPlugin is not found. Please refer to SessionManager Documentation here: http://docs.aws.amazon.com/console/systems-manager/session-manager-plugin-not-found\nProve that you have not successfully installed the Session Manager Plugin. You may need to relaunch Command Prompt after installing Session Manager Plugin.\nConnect to the Private Windows Instance you created using the Remote Desktop tool on your workstation. In the Computer section: enter localhost:9999. Return to the administration interface of the System Manager - Session Manager service. Click tab Session history. We will see session logs with Document name AWS-StartPortForwardingSession. Congratulations on completing the lab on how to use Session Manager to connect and store session logs in S3 bucket. Remember to perform resource cleanup to avoid unintended costs.\n"
},
{
	"uri": "//localhost:1313/2-introduction-to-threat-detection-and-response-services/2.1-aws-security-hub/2.1.5-security-hub-notifications/",
	"title": "Security Hub - Notifications",
	"tags": [],
	"description": "",
	"content": "Configure SNS topic Navigate to Amazon SNS. https://console.aws.amazon.com/sns/v3/home 2. Click Topics in the left navigation. Click Create topic. Select Standard type. For the name, enter \u0026ldquo;security-hub-findings\u0026rdquo;. Leave everything else as is and click Create topic at the bottom of the page. This will create the topic. Sbscribe to the topic From the security-hub-findings topic page, click Create subscription. On the Create subscription page, under Protocol, select email. On the Create subscription page, under Endpoint, enter your email address that you want to use for this workshop to receive notifications. You can unsubscribe at the end of the workshop.\nClick Create subscription. Check the email you entered. Within a couple minutes, you will receive an email at the email address you entered. Confirm the subscription by clicking \u0026ldquo;Confirm subscription\u0026rdquo; in the email. This will open a confirmation webpage. Create an EventBridge Rule to send findings to the topic Now that you have subscribed to the SNS topic, you are ready to send findings there. Create an EventBridge rule to listen for events from Security Hub. Navigate to Amazon EventBridge. https://console.aws.amazon.com/events/home Click the Create rule button on the right with \u0026ldquo;EventBridge Rule\u0026rdquo; selected. On the Define rule detail page, name your rule \u0026ldquo;security-hub-findings\u0026rdquo;. Click Next. On the Build event pattern page, scroll down to the Event pattern section, click Edit pattern in the bottom right.\nAdd the following event pattern (JSON). This pattern will identify events for Security Hub findings labeled CRITICAL severity.\n{ \u0026#34;source\u0026#34;: [ \u0026#34;aws.securityhub\u0026#34; ], \u0026#34;detail-type\u0026#34;: [ \u0026#34;Security Hub Findings - Imported\u0026#34; ], \u0026#34;detail\u0026#34;: { \u0026#34;findings\u0026#34;: { \u0026#34;ProductName\u0026#34;: [ \u0026#34;Security Hub\u0026#34; ], \u0026#34;Severity\u0026#34;: { \u0026#34;Label\u0026#34;: [ \u0026#34;CRITICAL\u0026#34; ] } } } } Click Next. On the Select target(s) page, from the Select a target dropdown, select SNS topic. Then from the Topic dropdown, select security-hub-findings. Click Next.\nOn the Configure tags - optional page, click Next.\nOn the Review and create page, click Create rule. Keep an eye on your email through the rest of the workshop. View the created rule: "
},
{
	"uri": "//localhost:1313/6-cleanup/",
	"title": "Clean up resources",
	"tags": [],
	"description": "",
	"content": "We will take the following steps to delete the resources we created in this exercise.\nDelete EC2 instance Go to EC2 service management console\nClick Instances. Select both Public Linux Instance and Private Windows Instance instances. Click Instance state. Click Terminate instance, then click Terminate to confirm. Go to IAM service management console\nClick Roles. In the search box, enter SSM. Click to select SSM-Role. Click Delete, then enter the role name SSM-Role and click Delete to delete the role. Click Users. Click on user Portfwd. Click Delete, then enter the user name Portfwd and click Delete to delete the user. Delete S3 bucket Access System Manager - Session Manager service management console.\nClick the Preferences tab. Click Edit. Scroll down. In the section S3 logging. Uncheck Enable to disable logging. Scroll down. Click Save. Go to S3 service management console\nClick on the S3 bucket we created for this lab. (Example: lab-fcj-bucket-0001 ) Click Empty. Enter permanently delete, then click Empty to proceed to delete the object in the bucket. Click Exit. After deleting all objects in the bucket, click Delete\nEnter the name of the S3 bucket, then click Delete bucket to proceed with deleting the S3 bucket. Delete VPC Endpoints Go to VPC service management console Click Endpoints. Select the 4 endpoints we created for the lab including SSM, SSMMESSAGES, EC2MESSAGES, S3GW. Click Actions. Click Delete VPC endpoints. In the confirm box, enter delete.\nClick Delete to proceed with deleting endpoints. Click the refresh icon, check that all endpoints have been deleted before proceeding to the next step.\nDelete VPC Go to VPC service management console\nClick Your VPCs. Click on Lab VPC. Click Actions. Click Delete VPC. In the confirm box, enter delete to confirm, click Delete to delete Lab VPC and related resources.\n"
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]